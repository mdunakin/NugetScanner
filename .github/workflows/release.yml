name: Release

on:
  push:
    tags:
      - "v*"   # e.g. v1.0.0

permissions:
  contents: write   # <-- needed to create the GitHub Release

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Cache NuGet packages (packages.config)
        uses: actions/cache@v4
        with:
          path: packages
          key: nuget-packages-${{ hashFiles('**/packages.config') }}
          restore-keys: |
            nuget-packages-

      - name: Restore
        run: nuget restore NugetScanner.sln

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Build (Release)
        run: msbuild NugetScanner.sln /p:Configuration=Release /p:Platform="Any CPU" /m

      - name: Package artifacts
        id: pkg
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $version = "${env:GITHUB_REF_NAME}".TrimStart('v')

          $ws     = $env:GITHUB_WORKSPACE
          $outDir = Join-Path $ws 'NugetScanner\bin\Release'
          if (-not (Test-Path $outDir)) { throw "Could not find output folder: $outDir" }

          $dist = Join-Path $ws 'dist'
          New-Item -ItemType Directory -Path $dist -Force | Out-Null

          $zipName = "NugetScanner-$version-windows.zip"
          $zipPath = Join-Path $dist $zipName

          Compress-Archive -Path (Join-Path $outDir '*') -DestinationPath $zipPath -Force

          # Create checksum
          $checksumPath = "$zipPath.sha256"
          $sha = (Get-FileHash -Path $zipPath -Algorithm SHA256).Hash
          "$sha  $zipName" | Out-File -FilePath $checksumPath -Encoding ASCII -Force

          # Expose outputs using forward slashes (glob expects / on all OSes)
          $zipRel = "dist/$zipName"
          $chkRel = "dist/$zipName.sha256"
          "zip=$zipRel"      | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          "checksum=$chkRel" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Show packaged files
        shell: bash
        run: ls -la dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.zip
            dist/*.zip.sha256
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
